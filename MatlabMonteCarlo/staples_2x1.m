function stap2x1 = staples_2x1(U,Comm)
% stap = staples_2x1(U,Comm)
%
% compute the staples 2x1 for the configuration U and communication structure Comm.
% The result is saved in a vector with indices:
% stap2x1(Nc,Nc,direction of the hingeing link, direction of the staple,extended volume)
%

up=1;dn=2;
dirs=[1:length(Comm.l)];
EV=prod(Comm.el);
V=prod(Comm.l);
Nc=size(U,1);
thick=max(Comm.el(Comm.pd)-Comm.l(Comm.pd))/2;
stap2x1=zeros(Nc,Nc,D,D,EV);

stap1x1=staples_1x1(U,Comm,1);

for mu= dirs
 for nu = setdiff(dirs,mu)
  for pnt =1:V
   epnt=Comm.extind(pnt);
   stap2x1(:,:,mu,nu,epnt)=...
       stap1x1(:,:,nu,mu,dn,epnt)*...
       U(:,:,mu,Comm.neigh(epnt,nu,up))*...
       U(:,:,nu,Comm.neigh(epnt,mu,up))' + ...
       stap1x1(:,:,nu,mu,dn,Comm.neigh(epnt,nu,dn))' *...
       U(:,:,mu,Comm.neigh(epnt,nu,dn))*...
       U(:,:,nu,Comm.neigh(Comm.neigh(epnt,nu,dn),mu,up))+...
       U(:,:,nu,epnt)*...
       stap1x1(:,:,mu,nu,up,Comm.neigh(epnt,nu,up))*...
       U(:,:,nu,Comm.neigh(epnt,mu,up))' + ...
       U(:,:,nu,Comm.neigh(epnt,nu,dn))' *...
       stap1x1(:,:,mu,nu,dn,Comm.neigh(epnt,nu,dn))*...
       U(:,:,nu,Comm.neigh(Comm.neigh(epnt,nu,dn),mu,up))+...
       U(:,:,nu,epnt)*...
       U(:,:,mu,Comm.neigh(epnt,nu,up))*...
       stap1x1(:,:,nu,mu,up,Comm.neigh(epnt,mu,up))' + ...
       U(:,:,nu,Comm.neigh(epnt,nu,dn))' *...
       U(:,:,mu,Comm.neigh(epnt,nu,dn))*...
       stap1x1(:,:,nu,mu,up,Comm.neigh(Comm.neigh(epnt,nu,dn),mu,up));
  end
 end
end
